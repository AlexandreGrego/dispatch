image: serverless-docker-local.artifactory.eng.vmware.com/photon-golang-ci:v0.0.2

variables:
  REPO_NAME: gitlab.eng.vmware.com/serverless
  DOCKER_REGISTRY: serverless-docker-local.artifactory.eng.vmware.com

before_script:
  - /bin/true

stages:
  - build
  - test
  - e2e

### Common jobs ###

# Check syntax of Go source files
check-syntax:
  tags:
    - docker
  stage: build
  script:
    - scripts/gofmtcheck.sh

# check if source files include required copyright header
check-headers:
  tags:
    - docker
  stage: build
  script:
    - scripts/header-check.sh

check-tests-missing:
  tags:
    - docker
  stage: build
  script:
    - scripts/test-check.sh

build-binaries:
  tags:
    - docker
  stage: build
  only:
    - master
    - /^.*-run-e2e$/
  script:
    - cd ..
    - export GOPATH=`pwd`
    - rm -rf $GOPATH/src/$REPO_NAME
    - mkdir -p $GOPATH/src/$REPO_NAME
    - mv $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME/serverless
    - cd $GOPATH/src/$REPO_NAME/serverless
    - make linux
    - cd ..
    - mv `pwd`/serverless $CI_PROJECT_DIR
  artifacts:
    expire_in: 1 day
    paths:
      - bin/

coverage:
  tags:
    - docker
  stage: test
  script:
    - mkdir -p $GOPATH/src/$REPO_NAME
    - mv $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME/serverless
    - cd $GOPATH/src/$REPO_NAME/serverless
    - mkdir -p $CI_PROJECT_DIR/.cover
    - scripts/coverage.sh
  artifacts:
    paths:
      - .cover/cover.html

build-images:
  tags:
    - docker
    - kubernetes
  image: serverless-docker-local.artifactory.eng.vmware.com/photon-k8s-ci:v0.0.2
  stage: test
  only:
    - master
    - /^.*-run-e2e$/
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
  dependencies:
    - build-binaries
  script:
    - export IMAGE_TAG="$(date +"%y%m%d%H%M%S")-${CI_COMMIT_SHA:0:10}"
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
    - make ci-images
    - echo $IMAGE_TAG > docker-tag.txt
  artifacts:
    expire_in: 1 day
    paths:
      - docker-tag.txt

deploy-vs-test:
  tags:
    - kubernetes-single
  stage: e2e
  only:
    - master
    - /^.*-run-e2e$/
  image: serverless-docker-local.artifactory.eng.vmware.com/photon-k8s-ci:v0.0.4
  variables:
    CI_NAMESPACE: gitlab
    HELM_REPO: http://10.126.236.44:9000/charts/
    FAAS_NAMESPACE: openfaas
    VS_NAMESPACE: serverless
    VS_DOMAIN: serverless.vmware.com
  dependencies:
    - build-binaries
    - build-images
  before_script:
    - openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=serverless.vmware.com/O=serverless.vmware.com"
    # 10.248.0.100 is ingress controller IP, purposely set to this value in CI k8s clusters
    - echo "10.248.0.100 $VS_DOMAIN" >> /etc/hosts 
    - export IMAGE_TAG=$(cat docker-tag.txt)
    - cp bin/vs-linux /usr/local/bin/vs
    - cp e2e/.vs.json /root/
    - e2e/scripts/configure-kubectl.sh
    - e2e/scripts/configure-helm.sh
    - kubectl create namespace $FAAS_NAMESPACE
    - helm install --wait --namespace=$FAAS_NAMESPACE --name openfaas --set exposeServices=false serverless/openfaas
    - kubectl create namespace $VS_NAMESPACE
    - kubectl create secret tls serverless-vmware-tls --key tls.key --cert tls.crt -n $VS_NAMESPACE
    - export OPENFAAS_AUTH=$(echo "{\"username\":\"$DOCKER_USERNAME\",\"password\":\"$DOCKER_PASSWORD\",\"email\":\"serverless@vmware.com\"}" | base64 -w 0)
    - helm install --wait --namespace $VS_NAMESPACE --name vmware-serverless -f e2e/values.yaml --set global.tag=$IMAGE_TAG --set global.debug=true --set function-manager.faas.openfaas.registryAuth="$OPENFAAS_AUTH" ./charts/serverless 
    # TODO(karol): find a better way to wait for ingress to be ready
    - sleep 15
  script:
    # Demo script. TODO(karol): replace with proper tests
    - cd scripts
    - ./demo.sh
    # set FLAG for successful execution
    - cd $CI_PROJECT_DIR
    - echo "yes" > success.txt
  after_script:
    - test -e success.txt || kubectl logs deploy/gateway -n $FAAS_NAMESPACE || /bin/true
    - test -e success.txt || kubectl logs deploy/faas-netesd -n $FAAS_NAMESPACE || /bin/true
    - test -e success.txt || kubectl logs deploy/vmware-serverless-function-manager -n $VS_NAMESPACE | sed 's/\\n/\n/g' || /bin/true 
    - test -e success.txt || kubectl logs deploy/vmware-serverless-image-manager -n $VS_NAMESPACE | sed 's/\\n/\n/g' || /bin/true
    - test -e success.txt || kubectl logs deploy/vmware-serverless-identity-manager -n $VS_NAMESPACE | sed 's/\\n/\n/g' || /bin/true
    - test -e success.txt || kubectl logs deploy/vmware-serverless-secret-store -n $VS_NAMESPACE | sed 's/\\n/\n/g' || /bin/true
    - e2e/scripts/vs-cleanup.sh || /bin/true
    - helm delete --purge vmware-serverless || /bin/true
    - helm delete --purge openfaas || /bin/true
    - kubectl delete namespace $VS_NAMESPACE || /bin/true
    - kubectl delete namespace $FAAS_NAMESPACE || /bin/true
