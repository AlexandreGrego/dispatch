///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/functionmanager/gen/models"
)

// RunFunctionReader is a Reader for the RunFunction structure.
type RunFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRunFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewRunFunctionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewRunFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRunFunctionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRunFunctionOK creates a RunFunctionOK with default headers values
func NewRunFunctionOK() *RunFunctionOK {
	return &RunFunctionOK{}
}

/*RunFunctionOK handles this case with default header values.

Successful execution (blocking call)
*/
type RunFunctionOK struct {
	Payload *models.Run
}

func (o *RunFunctionOK) Error() string {
	return fmt.Sprintf("[POST /{functionName}/runs][%d] runFunctionOK  %+v", 200, o.Payload)
}

func (o *RunFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunFunctionAccepted creates a RunFunctionAccepted with default headers values
func NewRunFunctionAccepted() *RunFunctionAccepted {
	return &RunFunctionAccepted{}
}

/*RunFunctionAccepted handles this case with default header values.

Execution started (non-blocking call)
*/
type RunFunctionAccepted struct {
	Payload *models.Run
}

func (o *RunFunctionAccepted) Error() string {
	return fmt.Sprintf("[POST /{functionName}/runs][%d] runFunctionAccepted  %+v", 202, o.Payload)
}

func (o *RunFunctionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunFunctionNotFound creates a RunFunctionNotFound with default headers values
func NewRunFunctionNotFound() *RunFunctionNotFound {
	return &RunFunctionNotFound{}
}

/*RunFunctionNotFound handles this case with default header values.

Function not found
*/
type RunFunctionNotFound struct {
}

func (o *RunFunctionNotFound) Error() string {
	return fmt.Sprintf("[POST /{functionName}/runs][%d] runFunctionNotFound ", 404)
}

func (o *RunFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRunFunctionInternalServerError creates a RunFunctionInternalServerError with default headers values
func NewRunFunctionInternalServerError() *RunFunctionInternalServerError {
	return &RunFunctionInternalServerError{}
}

/*RunFunctionInternalServerError handles this case with default header values.

Execution failed (blocking call)
*/
type RunFunctionInternalServerError struct {
}

func (o *RunFunctionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /{functionName}/runs][%d] runFunctionInternalServerError ", 500)
}

func (o *RunFunctionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
