///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/functionmanager/gen/models"
)

// GetRunByNameReader is a Reader for the GetRunByName structure.
type GetRunByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRunByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetRunByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRunByNameOK creates a GetRunByNameOK with default headers values
func NewGetRunByNameOK() *GetRunByNameOK {
	return &GetRunByNameOK{}
}

/*GetRunByNameOK handles this case with default header values.

Function Run
*/
type GetRunByNameOK struct {
	Payload *models.Run
}

func (o *GetRunByNameOK) Error() string {
	return fmt.Sprintf("[GET /{functionName}/runs/{runName}][%d] getRunByNameOK  %+v", 200, o.Payload)
}

func (o *GetRunByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunByNameNotFound creates a GetRunByNameNotFound with default headers values
func NewGetRunByNameNotFound() *GetRunByNameNotFound {
	return &GetRunByNameNotFound{}
}

/*GetRunByNameNotFound handles this case with default header values.

Function or Run not found
*/
type GetRunByNameNotFound struct {
}

func (o *GetRunByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /{functionName}/runs/{runName}][%d] getRunByNameNotFound ", 404)
}

func (o *GetRunByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
