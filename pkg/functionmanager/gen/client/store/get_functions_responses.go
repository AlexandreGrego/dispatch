///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/functionmanager/gen/models"
)

// GetFunctionsReader is a Reader for the GetFunctions structure.
type GetFunctionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFunctionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFunctionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetFunctionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFunctionsOK creates a GetFunctionsOK with default headers values
func NewGetFunctionsOK() *GetFunctionsOK {
	return &GetFunctionsOK{}
}

/*GetFunctionsOK handles this case with default header values.

Successful operation
*/
type GetFunctionsOK struct {
	Payload models.GetFunctionsOKBody
}

func (o *GetFunctionsOK) Error() string {
	return fmt.Sprintf("[GET /][%d] getFunctionsOK  %+v", 200, o.Payload)
}

func (o *GetFunctionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionsDefault creates a GetFunctionsDefault with default headers values
func NewGetFunctionsDefault(code int) *GetFunctionsDefault {
	return &GetFunctionsDefault{
		_statusCode: code,
	}
}

/*GetFunctionsDefault handles this case with default header values.

Custom error
*/
type GetFunctionsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get functions default response
func (o *GetFunctionsDefault) Code() int {
	return o._statusCode
}

func (o *GetFunctionsDefault) Error() string {
	return fmt.Sprintf("[GET /][%d] getFunctions default  %+v", o._statusCode, o.Payload)
}

func (o *GetFunctionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
