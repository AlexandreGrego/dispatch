///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/functionmanager/gen/models"
)

// RunFunctionOKCode is the HTTP code returned for type RunFunctionOK
const RunFunctionOKCode int = 200

/*RunFunctionOK Successful execution (blocking call)

swagger:response runFunctionOK
*/
type RunFunctionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Run `json:"body,omitempty"`
}

// NewRunFunctionOK creates RunFunctionOK with default headers values
func NewRunFunctionOK() *RunFunctionOK {
	return &RunFunctionOK{}
}

// WithPayload adds the payload to the run function o k response
func (o *RunFunctionOK) WithPayload(payload *models.Run) *RunFunctionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the run function o k response
func (o *RunFunctionOK) SetPayload(payload *models.Run) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RunFunctionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RunFunctionAcceptedCode is the HTTP code returned for type RunFunctionAccepted
const RunFunctionAcceptedCode int = 202

/*RunFunctionAccepted Execution started (non-blocking call)

swagger:response runFunctionAccepted
*/
type RunFunctionAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Run `json:"body,omitempty"`
}

// NewRunFunctionAccepted creates RunFunctionAccepted with default headers values
func NewRunFunctionAccepted() *RunFunctionAccepted {
	return &RunFunctionAccepted{}
}

// WithPayload adds the payload to the run function accepted response
func (o *RunFunctionAccepted) WithPayload(payload *models.Run) *RunFunctionAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the run function accepted response
func (o *RunFunctionAccepted) SetPayload(payload *models.Run) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RunFunctionAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RunFunctionNotFoundCode is the HTTP code returned for type RunFunctionNotFound
const RunFunctionNotFoundCode int = 404

/*RunFunctionNotFound Function not found

swagger:response runFunctionNotFound
*/
type RunFunctionNotFound struct {
}

// NewRunFunctionNotFound creates RunFunctionNotFound with default headers values
func NewRunFunctionNotFound() *RunFunctionNotFound {
	return &RunFunctionNotFound{}
}

// WriteResponse to the client
func (o *RunFunctionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// RunFunctionInternalServerErrorCode is the HTTP code returned for type RunFunctionInternalServerError
const RunFunctionInternalServerErrorCode int = 500

/*RunFunctionInternalServerError Execution failed (blocking call)

swagger:response runFunctionInternalServerError
*/
type RunFunctionInternalServerError struct {
}

// NewRunFunctionInternalServerError creates RunFunctionInternalServerError with default headers values
func NewRunFunctionInternalServerError() *RunFunctionInternalServerError {
	return &RunFunctionInternalServerError{}
}

// WriteResponse to the client
func (o *RunFunctionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
}
