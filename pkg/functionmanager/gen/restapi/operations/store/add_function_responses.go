///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/functionmanager/gen/models"
)

// AddFunctionAcceptedCode is the HTTP code returned for type AddFunctionAccepted
const AddFunctionAcceptedCode int = 202

/*AddFunctionAccepted Function accepted for creation

swagger:response addFunctionAccepted
*/
type AddFunctionAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Function `json:"body,omitempty"`
}

// NewAddFunctionAccepted creates AddFunctionAccepted with default headers values
func NewAddFunctionAccepted() *AddFunctionAccepted {
	return &AddFunctionAccepted{}
}

// WithPayload adds the payload to the add function accepted response
func (o *AddFunctionAccepted) WithPayload(payload *models.Function) *AddFunctionAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function accepted response
func (o *AddFunctionAccepted) SetPayload(payload *models.Function) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddFunctionMethodNotAllowedCode is the HTTP code returned for type AddFunctionMethodNotAllowed
const AddFunctionMethodNotAllowedCode int = 405

/*AddFunctionMethodNotAllowed Invalid input

swagger:response addFunctionMethodNotAllowed
*/
type AddFunctionMethodNotAllowed struct {
}

// NewAddFunctionMethodNotAllowed creates AddFunctionMethodNotAllowed with default headers values
func NewAddFunctionMethodNotAllowed() *AddFunctionMethodNotAllowed {
	return &AddFunctionMethodNotAllowed{}
}

// WriteResponse to the client
func (o *AddFunctionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
}
