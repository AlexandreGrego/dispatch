///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/secret-store/gen/models"
)

// DeleteSecretNameReader is a Reader for the DeleteSecretName structure.
type DeleteSecretNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecretNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSecretNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteSecretNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteSecretNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteSecretNameNoContent creates a DeleteSecretNameNoContent with default headers values
func NewDeleteSecretNameNoContent() *DeleteSecretNameNoContent {
	return &DeleteSecretNameNoContent{}
}

/*DeleteSecretNameNoContent handles this case with default header values.

Successful deletion
*/
type DeleteSecretNameNoContent struct {
}

func (o *DeleteSecretNameNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] deleteSecretNameNoContent ", 204)
}

func (o *DeleteSecretNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretNameNotFound creates a DeleteSecretNameNotFound with default headers values
func NewDeleteSecretNameNotFound() *DeleteSecretNameNotFound {
	return &DeleteSecretNameNotFound{}
}

/*DeleteSecretNameNotFound handles this case with default header values.

Resource Not Found if no secret exists with the given name
*/
type DeleteSecretNameNotFound struct {
	Payload *models.Error
}

func (o *DeleteSecretNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] deleteSecretNameNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSecretNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecretNameDefault creates a DeleteSecretNameDefault with default headers values
func NewDeleteSecretNameDefault(code int) *DeleteSecretNameDefault {
	return &DeleteSecretNameDefault{
		_statusCode: code,
	}
}

/*DeleteSecretNameDefault handles this case with default header values.

generic error
*/
type DeleteSecretNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete secret name default response
func (o *DeleteSecretNameDefault) Code() int {
	return o._statusCode
}

func (o *DeleteSecretNameDefault) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] DeleteSecretName default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteSecretNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
