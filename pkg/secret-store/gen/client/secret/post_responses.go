///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/secret-store/gen/models"
)

// PostReader is a Reader for the Post structure.
type PostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostCreated creates a PostCreated with default headers values
func NewPostCreated() *PostCreated {
	return &PostCreated{}
}

/*PostCreated handles this case with default header values.

The created secret.
*/
type PostCreated struct {
	Payload *models.Secret
}

func (o *PostCreated) Error() string {
	return fmt.Sprintf("[POST /][%d] postCreated  %+v", 201, o.Payload)
}

func (o *PostCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Secret)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDefault creates a PostDefault with default headers values
func NewPostDefault(code int) *PostDefault {
	return &PostDefault{
		_statusCode: code,
	}
}

/*PostDefault handles this case with default header values.

Standard error
*/
type PostDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post default response
func (o *PostDefault) Code() int {
	return o._statusCode
}

func (o *PostDefault) Error() string {
	return fmt.Sprintf("[POST /][%d] Post default  %+v", o._statusCode, o.Payload)
}

func (o *PostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
