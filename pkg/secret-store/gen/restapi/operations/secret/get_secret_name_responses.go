///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/secret-store/gen/models"
)

// GetSecretNameOKCode is the HTTP code returned for type GetSecretNameOK
const GetSecretNameOKCode int = 200

/*GetSecretNameOK The secret identified by the secretName

swagger:response getSecretNameOK
*/
type GetSecretNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Secret `json:"body,omitempty"`
}

// NewGetSecretNameOK creates GetSecretNameOK with default headers values
func NewGetSecretNameOK() *GetSecretNameOK {
	return &GetSecretNameOK{}
}

// WithPayload adds the payload to the get secret name o k response
func (o *GetSecretNameOK) WithPayload(payload *models.Secret) *GetSecretNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get secret name o k response
func (o *GetSecretNameOK) SetPayload(payload *models.Secret) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSecretNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSecretNameNotFoundCode is the HTTP code returned for type GetSecretNameNotFound
const GetSecretNameNotFoundCode int = 404

/*GetSecretNameNotFound Resource Not Found if no secret exists with the given name

swagger:response getSecretNameNotFound
*/
type GetSecretNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSecretNameNotFound creates GetSecretNameNotFound with default headers values
func NewGetSecretNameNotFound() *GetSecretNameNotFound {
	return &GetSecretNameNotFound{}
}

// WithPayload adds the payload to the get secret name not found response
func (o *GetSecretNameNotFound) WithPayload(payload *models.Error) *GetSecretNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get secret name not found response
func (o *GetSecretNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSecretNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
