///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteSecretNameHandlerFunc turns a function with the right signature into a delete secret name handler
type DeleteSecretNameHandlerFunc func(DeleteSecretNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteSecretNameHandlerFunc) Handle(params DeleteSecretNameParams) middleware.Responder {
	return fn(params)
}

// DeleteSecretNameHandler interface for that can handle valid delete secret name params
type DeleteSecretNameHandler interface {
	Handle(DeleteSecretNameParams) middleware.Responder
}

// NewDeleteSecretName creates a new http.Handler for the delete secret name operation
func NewDeleteSecretName(ctx *middleware.Context, handler DeleteSecretNameHandler) *DeleteSecretName {
	return &DeleteSecretName{Context: ctx, Handler: handler}
}

/*DeleteSecretName swagger:route DELETE /{secretName} secret deleteSecretName

DeleteSecretName delete secret name API

*/
type DeleteSecretName struct {
	Context *middleware.Context
	Handler DeleteSecretNameHandler
}

func (o *DeleteSecretName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteSecretNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
