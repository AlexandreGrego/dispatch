///////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/serverless/serverless/pkg/function-manager/gen/models"
)

// DeleteFunctionByNameReader is a Reader for the DeleteFunctionByName structure.
type DeleteFunctionByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFunctionByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteFunctionByNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteFunctionByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteFunctionByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteFunctionByNameNoContent creates a DeleteFunctionByNameNoContent with default headers values
func NewDeleteFunctionByNameNoContent() *DeleteFunctionByNameNoContent {
	return &DeleteFunctionByNameNoContent{}
}

/*DeleteFunctionByNameNoContent handles this case with default header values.

Successful deletion
*/
type DeleteFunctionByNameNoContent struct {
}

func (o *DeleteFunctionByNameNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{functionName}][%d] deleteFunctionByNameNoContent ", 204)
}

func (o *DeleteFunctionByNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFunctionByNameBadRequest creates a DeleteFunctionByNameBadRequest with default headers values
func NewDeleteFunctionByNameBadRequest() *DeleteFunctionByNameBadRequest {
	return &DeleteFunctionByNameBadRequest{}
}

/*DeleteFunctionByNameBadRequest handles this case with default header values.

Invalid Name supplied
*/
type DeleteFunctionByNameBadRequest struct {
	Payload *models.Error
}

func (o *DeleteFunctionByNameBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /{functionName}][%d] deleteFunctionByNameBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteFunctionByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFunctionByNameNotFound creates a DeleteFunctionByNameNotFound with default headers values
func NewDeleteFunctionByNameNotFound() *DeleteFunctionByNameNotFound {
	return &DeleteFunctionByNameNotFound{}
}

/*DeleteFunctionByNameNotFound handles this case with default header values.

Function not found
*/
type DeleteFunctionByNameNotFound struct {
	Payload *models.Error
}

func (o *DeleteFunctionByNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{functionName}][%d] deleteFunctionByNameNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFunctionByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
