swagger: '2.0'
info:
  description: |
    This is the API server for the serverless image manager service.
  version: 1.0.0
  title: Image Manager
  contact:
    email: bjung@vmware.com
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: baseImage
  description: Operations on base-images
- name: image
  description: Operations on images
- name: systemPackage
  description: Operations on system packages
- name: runtimePackage
  description: Operations on runtime packages
# schemes:
# - http
paths:
  /{organizationID}/base-image:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    post:
      tags:
      - baseImage
      summary: Add a new base image
      operationId: addBaseImage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Base image object
        required: true
        schema:
          $ref: '#/definitions/BaseImage'
      responses:
        405:
          description: Invalid input
    get:
      tags:
      - baseImage
      summary: List all existing base images
      operationId: updateBaseImage
      produces:
      - application/json
      parameters:
      - in: query
        name: runtime
        description: Base image runtime/language
        type: string
      - in: query
        name: tags
        description: Filter on base image tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BaseImage'
  /{organizationID}/base-image/{baseImageID}:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    - in: path
      name: baseImageID
      description: ID of base image to return
      required: true
      type: string
      format: uuid
    get:
      tags:
      - baseImage
      summary: Find base image by ID
      description: Returns a single base image
      operationId: getBaseImageById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid ID supplied
        404:
          description: Base image not found
    post:
      tags:
      - baseImage
      summary: Updates a base image
      operationId: updateBaseImageById
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/BaseImage'
      responses:
        405:
          description: Invalid input
    delete:
      tags:
      - baseImage
      summary: Deletes a base image
      operationId: deleteBaseImageById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid ID supplied
        404:
          description: Base image not found
  /{organizationID}/image:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    get:
      tags:
      - image
      summary: Get all images
      description: List all images
      operationId: getImages
      produces:
      - application/json
      parameters:
      - in: query
        name: runtime
        description: image runtime/language
        type: string
      - in: query
        name: tags
        description: Filter on image tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
    post:
      tags:
      - image
      summary: Add a new image
      operationId: addImage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Image object
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        405:
          description: Invalid input
  /{organizationID}/image/{imageID}:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    - in: path
      name: imageID
      description: ID of base image to return
      required: true
      type: string
      format: uuid
    get:
      tags:
      - image
      summary: Find image by ID
      description: Returns a single image
      operationId: getImageById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid ID supplied
        404:
          description: Image not found
    post:
      tags:
      - image
      summary: Updates an image
      operationId: updateImageById
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Image'
      responses:
        405:
          description: Invalid input
    delete:
      tags:
      - image
      summary: Deletes an image
      operationId: deleteImageById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid ID supplied
        404:
          description: Image not found
  /{organizationID}/system-package:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    get:
      tags:
      - systemPackage
      summary: Get all system packages
      description: List all system packages
      operationId: getSystemPackages
      produces:
      - application/json
      parameters:
      - in: query
        name: os-name
        description: OS name
        type: string
      - in: query
        name: os-version
        description: OS version
        type: string
      - in: query
        name: tags
        description: Filter on system package tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SystemPackage'
    post:
      tags:
      - systemPackage
      summary: Add a new system package
      operationId: addSystemPackage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: System package object
        required: true
        schema:
          $ref: '#/definitions/SystemPackage'
      responses:
        405:
          description: Invalid input
  /{organizationID}/system-package/{systemPackageID}:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    - in: path
      name: systemPackageID
      description: ID of base image to return
      required: true
      type: string
      format: uuid
    get:
      tags:
      - systemPackage
      summary: Find system package by ID
      description: Returns a single system package
      operationId: getSystemPackagesById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SystemPackage'
        400:
          description: Invalid ID supplied
        404:
          description: System package not found
    post:
      tags:
      - systemPackage
      summary: Updates a system package
      operationId: updateSystemPackageById
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/SystemPackage'
      responses:
        405:
          description: Invalid input
    delete:
      tags:
      - systemPackage
      summary: Deletes a system package
      operationId: deleteSystemPackageById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SystemPackage'
        400:
          description: Invalid ID supplied
        404:
          description: System package not found
  /{organizationID}/runtime-package:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    get:
      tags:
      - runtimePackage
      summary: Get all runtime packages
      description: List all runtime packages
      operationId: getRuntimePackages
      produces:
      - application/json
      parameters:
      - in: query
        name: runtime
        description: Runtime name
        type: string
      - in: query
        name: tags
        description: Filter on runtime package tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RuntimePackage'
    post:
      tags:
      - runtimePackage
      summary: Add a new runtime package
      operationId: addRuntimePackage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Runtime package object
        required: true
        schema:
          $ref: '#/definitions/RuntimePackage'
      responses:
        405:
          description: Invalid input
  /{organizationID}/runtime-package/{runtimePackageID}:
    parameters:
    - in: path
      name: organizationID
      required: true
      type: string
    - in: path
      name: runtimePackageID
      description: ID of base image to return
      required: true
      type: string
      format: uuid
    get:
      tags:
      - runtimePackage
      summary: Find runtime package by ID
      description: Returns a single runtime package
      operationId: getRuntimePackagesById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RuntimePackage'
        400:
          description: Invalid ID supplied
        404:
          description: Runtime package not found
    post:
      tags:
      - runtimePackage
      summary: Updates a runtime package
      operationId: updateRuntimePackageById
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/RuntimePackage'
      responses:
        405:
          description: Invalid input
    delete:
      tags:
      - runtimePackage
      summary: Deletes a runtime package
      operationId: deleteRuntimePackageById
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RuntimePackage'
        400:
          description: Invalid ID supplied
        404:
          description: Runtime package not found
definitions:
  Tag:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Spec:
    type: string
    enum:
    - CONFIGURE
    - CREATE
    - DELETE
  Status:
    type: string
    enum:
    - INITIALIZED
    - CREATING
    - READY
    - ERROR
    - DELETED
  Runtime:
    type: string
    enum:
    - python2
    - python3
    - nodejs6
  BaseImage:
    type: object
    required:
    - name
    - dockerUrl
    - runtime
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      dockerUrl:
        type: string
      runtime:
        $ref: '#/definitions/Runtime'
      public:
        type: boolean
        default: false
      spec:
        $ref: '#/definitions/Spec'
      status:
        $ref: '#/definitions/Status'
      groups:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: int
  Image:
    type: object
    required:
    - name
    - baseImageID
    - runtime
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      baseImageID:
        type: string
        format: uuid
      runtime:
        $ref: '#/definitions/Runtime'
      systemPackages:
        type: array
        items:
          type: string
          format: uuid
      runtimePackages:
        type: array
        items:
          type: string
          format: uuid
      spec:
        $ref: '#/definitions/Spec'
      status:
        $ref: '#/definitions/Status'
      groups:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: int
  SystemPackage:
    type: object
    required:
    - name
    - version
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      version:
        type: string
      os:
        type: object
        properties:
          name:
            type: string
            default: photon
          version:
            type: string
            default: 1.0
      groups:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: int
  RuntimePackage:
    type: object
    required:
    - name
    - version
    - runtime
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      version:
        type: string
      runtime:
        $ref: '#/definitions/Runtime'
      groups:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: int
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /serverless/image-manager/1.0.0
schemes:
 - https
 - http